name: CI/CD

on:
  push:
    branches:
      - backend/cicd
    paths:
      - "backend/**"

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - name: Create .env file with secrets
        run: |
          cd backend
          echo TZ=${{ secrets.TZ }} >> .env.production
          echo POSTGRESQL_DATABASE_USER=${{ secrets.POSTGRESQL_DATABASE_USER }} >> .env.production
          echo POSTGRESQL_DATABASE_PASSWORD=${{ secrets.POSTGRESQL_DATABASE_PASSWORD }} >> .env.production
          echo POSTGRESQL_DATABASE_HOST=${{ secrets.POSTGRESQL_DATABASE_HOST }} >> .env.production
          echo POSTGRESQL_DATABASE_PORT=${{ secrets.POSTGRESQL_DATABASE_PORT }} >> .env.production
          echo POSTGRESQL_DATABASE_NAME=${{ secrets.POSTGRESQL_DATABASE_NAME }} >> .env
          echo POSTGRESQL_SSL_KEY=${{ secrets.POSTGRESQL_SSL_KEY }} >> .env.production
          echo REDIS_URL=${{ secrets.REDIS_URL }} >> .env.production
          echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env.production
          echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env.production
          echo REDIS_STORE=${{ secrets.REDIS_STORE }} >> .env.production
          echo REDIS_USER_INFO_EXP=${{ secrets.REDIS_USER_INFO_EXP }} >> .env.production
          echo REDIS_CHALLENGE_EXP=${{ secrets.REDIS_CHALLENGE_EXP }} >> .env.production
          echo NEST_PORT=${{ secrets.NEST_PORT }} >> .env.production
          echo OPENVIDU_URL=${{ secrets.OPENVIDU_URL }} >> .env.production
          echo OPENVIDU_SECRET=${{ secrets.OPENVIDU_SECRET }} >> .env.production
          echo API_KEY=${{ secrets.API_KEY }} >> .env.production
          echo VAL_EMAIL=${{ secrets.VAL_EMAIL }} >> .env.production
          echo ACCESS_TOKEN_SECRET_KEY=${{ secrets.ACCESS_TOKEN_SECRET_KEY }} >> .env.production
          echo ACCESS_TOKEN_EXP=${{ secrets.ACCESS_TOKEN_EXP }} >> .env
          echo REFRESH_TOKEN_SECRET_KEY=${{ secrets.REFRESH_TOKEN_SECRET_KEY }} >> .env.production
          echo REFRESH_TOKEN_EXP=${{ secrets.REFRESH_TOKEN_EXP }} >> .env.production
          echo SOCKET_PORT=${{ secrets.SOCKET_PORT }} >> .env.production
          echo IS_Production=${{ secrets.IS_Production }} >> .env.production
          echo CORS_ORIGINS=${{ secrets.CORS_ORIGINS }} >> .env.production
          echo DOMAIN=${{ secrets.DOMAIN }} >> .env.production
          echo EMAIL_WELCOME_SUBJECT=${{ secrets.EMAIL_WELCOME_SUBJECT }} >> .env.production
          echo ISSUANCE_TMP_PW=${{ secrets.ISSUANCE_TMP_PW }} >> .env.production
          echo SENSITIVE_FIELDS=${{ secrets.SENSITIVE_FIELDS }} >> .env.production

      - name: Install dependencies
        run: |
          cd backend  
          npm ci

      # - name: Run tests
      #   run: |
      #     cd backend
      #     npm run test

      - name: Build Project
        run: |
          cd backend
          npm run build

      - name: Deploy for EC2
        if: success()
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          EC2_MAIN_HOST: ${{ secrets.EC2_MAIN_HOST }}
        run: |
          cd backend
          ls
          echo "$EC2_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          rsync -avz -e "ssh -i ec2_key.pem" dist/ $EC2_USER@$EC2_HOST:/home/ubuntu/Final
          ssh -i ec2_key.pem $EC2_USER@$EC2_HOST "
            rsync -avz -e 'ssh -i /path/to/modugisang.pem' /home/ubuntu/Final/ $EC2_USER@$EC2_MAIN_HOST:/home/ubuntu/Final &&
            ssh -i /path/to/modugisang.pem $EC2_USER@$EC2_MAIN_HOST 'cd Final && pm2 kill && pm2 start dist/main.js --name Final'
          "
